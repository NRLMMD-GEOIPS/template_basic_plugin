# @ "product_defaults" YAML files specify a given set of defaults for
# @ product specifications within GeoIPS.

# @ Replace all instances of @ within this template with appropriate values for
# @ your particular use case.
# @ Once complete, remove all lines containing "@" from this file.

# @ A "product" within GeoIPS is a set of steps required to process a dataset
# @ in a given way.

# @ The currently supported product types are specified in
# @ geoips/schema/product_defaults, with the associated required contents and
# @ formatting

# @ NOTE: Once the command line interface has been finalized, much of these
# @       instructions will be replaced with calls to the command line
# @       interface in order to identify available algorithms, colormaps, etc.
# @       In the meantime, these instructions will point you towards the code
# @       itself that is referenced in the various pieces of the product
# @       specification.


interface: product_defaults

# @ "family" is a string that identifies the valid fields within this product.
# @ These are currently specified within geoips/schema/product_defaults
# @ - your product type must match a valid schema.
# @ The product "family" also specifies what operations must be applied to the dataset
# @ for a given product, and in what order.  The processing workflows handle
# @ ensuring each step is applied appropriately based on the product "family"
# @ Thus, only supported product families will behave appropriately within
# @ GeoIPS.  If a new unsupported order of operations is required for a given
# @ product, support for that product_type must be added in the main GeoIPS
# @ infrastructure - please contact the GeoIPS Team if you require a new
# @ product_type.
family: interpolator_algorithm_colormap

# @ product "name" is the identifier for the current product
# @ Product "name" will be referenced within products/*.yaml product list files,
# @ where the actual required variable names will be identified for a given source.
# @ NOTE: Please use '-' as a delimeter in product names by GeoIPS convention.
# @ This allows using either '_' or '.' as a delimiter in filenames,
# @ another GeoIPS convention.
# @ Capitalization of each word in Product-Name can aid in human readability,
# @ but is not strictly required. GeoIPS *is* case sensitive.
name: 89-Test
docstring: |
    The default product_defaults_source_name plugin configuration.
spec:
    algorithm:
        plugin:
            # @ The algorithm "name' specifies a geoips algorithm plugin installed
            # @ via entry points, in any repository.
            # @ This string must match the "name" attribute on the algorith plugin,
            # @ which will also match the portion of the entry point in
            # @ pyproject.toml that comes before the '=',
            # @ ie, 'single_channel' or 'pmw_89pct' as found in
            # @ geoips/pyproject.toml project.entry-points."geoips.algorithms".
            name: pmw_89test
            # @ Additional arguments to pass directly to the algorithm plugin.
            # @ If none are required, pass {}
            # @ Fields under "arguments" must match arguments within your
            # @ specified algorithm plugin.
            arguments:
              output_data_range: [105.0, 280.0]
              min_outbounds: crop
              max_outbounds: mask
              norm: null
              inverse: null
    colormap:
        plugin:
            # @ The colormap "name" specifies a geoips colormap plugin installed
            # @ via entry points, in any repository.
            # @ This string must match the "name" attribute on the colormap plugin,
            # @ which will also match the portion of the entry point in
            # @ pyproject.toml that comes before the '=',
            # @ geoips/pyproject.toml project.entry-points."geoips.colormaps".
            # @ ie, 'visir.Infrared' or 'matplotlib_linear_norm' as found in geoips/setup.py 'geoips.user_colormaps'.
            name: pmw_89pct
            # @ Additional arguments to pass directly to the colormap plugin.
            # @ If none are required, pass {}
            # @ Fields under "arguments" must match arguments within your
            # @ specified colormap plugin.
            arguments:
              data_range: [105, 280]
    interpolator:
        plugin:
            # @ The colormap "name" specifies a geoips interpolator plugin installed
            # @ via entry points, in any repository.
            # @ This string must match the "name" attribute on the interpolator plugin,
            # @ which will also match the portion of the entry point in
            # @ geoips/pyproject.toml project.entry-points."geoips.interpolator".
            # @ ie, 'pyresample_wrappers.interp_nearest' or 'scipy_wrappers.interp_grid'
            # @ Interpolation routines are used when reprojecting to a requested
            # @ area definition.
            name: interp_gauss
            # @ Additional arguments to pass directly to the interpolator plugin.
            # @ If none are required, pass {}
            # @ Fields under "arguments" must match arguments within your
            # @ specified interpolator plugin.
            arguments:
              sigmaval: 10000
    coverage_checker:
        plugin:
            # @ The coverage_checker "name" specifies a geoips coverage_checker
            # @ plugin installed via entry points, in any repository.
            # @ This string must match the "name" attribute on the coverage_checker
            # @ plugin which will also match the portion of the entry point in
            # @ geoips/pyproject.toml project.entry-points."geoips.coverage_checkers".
            # @ Coverage checks are used to
            # @   a) determine if there is sufficient coverage to product a product and
            # @   b) include % coverage in filename and metadata if required.
            name: masked_arrays
            # @ Additional arguments to pass directly to the coverage_checker plugin.
            # @ If none are required, pass {}
            # @ Fields under "arguments" must match arguments within your
            # @ specified coverage_checker plugin.
            arguments: {}
